<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Configures a callback service implementation in a Silverlight client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a service closes a duplex session.</summary>
      <returns>true if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the callback behavior.</summary>
      <param name="serviceEndpoint">The endpoint for the callback object.</param>
      <param name="parameters">The collection of binding parameters that are configured.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Configures the client runtime to support the callback object.</summary>
      <param name="serviceEndpoint">The endpoint configured by the attribute.</param>
      <param name="clientRuntime">The client run-time object that the attribute configures.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> method. This implementation has no effect.</summary>
      <param name="serviceEndpoint">The endpoint to be modified.   </param>
      <param name="endpointDispatcher">The endpoint dispatcher that the method modifies.   </param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the endpoint description prior to building the runtime.</summary>
      <param name="serviceEndpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with a context that implements the callback contract and a specified binding.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="binding" />, or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified instance context, binding, and remote address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" />, <paramref name="binding" />, or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" /> UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateDescription">
      <summary>Creates a description of the service endpoint associated with this duplex channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the service.</returns>
      <exception cref="T:System.InvalidOperationException">The callback contract is null but the service endpoint requires one that is non-null.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Provides the base implementation from which Silverlight version 4 Release Candidate client objects can call duplex services.</summary>
      <typeparam name="TChannel">The type of the channel to be created.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.CreateChannel">
      <summary>Returns a channel to the service associated with the callback object passed to the constructor.</summary>
      <returns>A channel to the service of the type of the service contract interface.</returns>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Represents the context information for a service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance.</summary>
      <param name="implementation">The object that implements the serviceinstance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementation" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Returns the instance of the service for the instance context in response to an incoming message.</summary>
      <returns>The object that represents the service instance.</returns>
      <param name="message">The incoming message that triggered the creation of a service object.</param>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Gets or sets the context used for thread synchronization with the current instance context.</summary>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> used for thread synchronization with the current instance context.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is opened or closing and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The communication object has been aborted and cannot be modified in these states.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is faulted and cannot be modified in these states.</exception>
    </member>
  </members>
</doc>